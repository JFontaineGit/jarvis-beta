@use '../../../../styles/mixins.scss' as *;
@use '../../../../styles/variables.scss' as *;

.circle-container {
  @include flex-center;
  position: relative;
  width: clamp(250px, 35vw, 500px);
  height: clamp(250px, 35vw, 500px);
}

.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  
  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--particle-color);
    border-radius: var(--radius-full);
    opacity: 0.3;
    box-shadow: 0 0 6px var(--particle-color);
    animation: particleMove duration('slow') linear infinite;
    
    @include generate-particles(20);
  }
}

.animated-circle {
  @include flex-center;
  position: relative;
  width: clamp(200px, 30vw, 400px);
  height: clamp(200px, 30vw, 400px);
  border-radius: var(--radius-full);
  transition: all var(--transition-normal);
  
  // Glow rings
  .glow-ring {
    position: absolute;
    border-radius: var(--radius-full);
    opacity: 0.3;
    
    &.ring-outer {
      width: 100%;
      height: 100%;
      background: radial-gradient(
        circle,
        transparent 70%,
        rgba(var(--neon-primary), 0.1) 80%,
        transparent 100%
      );
      animation: pulseGlow 4s ease-in-out infinite;
    }
    
    &.ring-middle {
      width: 85%;
      height: 85%;
      background: radial-gradient(
        circle,
        transparent 70%,
        rgba(var(--neon-primary), 0.15) 80%,
        transparent 100%
      );
      animation: pulseGlow 3s ease-in-out infinite;
      animation-delay: 0.5s;
    }
    
    &.ring-inner {
      width: 70%;
      height: 70%;
      background: radial-gradient(
        circle,
        transparent 70%,
        rgba(var(--neon-primary), 0.2) 80%,
        transparent 100%
      );
      animation: pulseGlow 2s ease-in-out infinite;
      animation-delay: 1s;
    }
  }
  
  // Core circle
  .circle-core {
    @include flex-center;
    width: 60%;
    height: 60%;
    border-radius: var(--radius-full);
    position: relative;
    background: radial-gradient(
      circle at center,
      rgba(var(--neon-primary), 0.4) 0%,
      rgba(var(--neon-primary), 0.2) 40%,
      rgba(var(--neon-primary), 0.05) 70%,
      transparent 100%
    );
    box-shadow: 
      0 0 40px rgba(var(--neon-primary), 0.6),
      0 0 80px rgba(var(--neon-primary), 0.4),
      inset 0 0 40px rgba(var(--neon-primary), 0.3);
    transition: all var(--transition-normal);
    
    .core-gradient {
      width: 100%;
      height: 100%;
      border-radius: var(--radius-full);
      background: radial-gradient(
        circle at 35% 35%,
        rgba(255, 255, 255, 0.1) 0%,
        transparent 50%
      );
      animation: rotateHue 10s linear infinite;
    }
  }
  
  // Volume rings for listening
  .volume-ring {
    position: absolute;
    border-radius: var(--radius-full);
    border: 2px solid rgba(var(--neon-secondary), 0.4);
    opacity: 0;
    animation: volumePulse 2s ease-out infinite;
    
    &.ring-1 {
      width: 70%;
      height: 70%;
      animation-delay: 0s;
    }
    
    &.ring-2 {
      width: 85%;
      height: 85%;
      animation-delay: 0.4s;
    }
    
    &.ring-3 {
      width: 100%;
      height: 100%;
      animation-delay: 0.8s;
    }
  }
  
  // Speaking pulse
  .speaking-pulse {
    position: absolute;
    width: 60%;
    height: 60%;
    border-radius: var(--radius-full);
    background: radial-gradient(
      circle,
      rgba(var(--neon-primary), 0.3) 0%,
      rgba(var(--neon-primary), 0.1) 50%,
      transparent 100%
    );
    animation: speakPulse 1.5s ease-out infinite;
    
    &.delay-1 {
      animation-delay: 0.3s;
    }
    
    &.delay-2 {
      animation-delay: 0.6s;
    }
  }
  
  // Listening state
  &.listening {
    .circle-core {
      background: radial-gradient(
        circle at center,
        rgba(var(--neon-secondary), 0.5) 0%,
        rgba(var(--neon-secondary), 0.3) 40%,
        rgba(var(--neon-secondary), 0.1) 70%,
        transparent 100%
      );
      box-shadow: 
        0 0 50px rgba(var(--neon-secondary), 0.8),
        0 0 100px rgba(var(--neon-secondary), 0.6),
        inset 0 0 50px rgba(var(--neon-secondary), 0.4);
      animation: pulseGlow 2s ease-in-out infinite;
    }
    
    .glow-ring {
      &.ring-outer,
      &.ring-middle,
      &.ring-inner {
        background: radial-gradient(
          circle,
          transparent 70%,
          rgba(var(--neon-secondary), 0.2) 80%,
          transparent 100%
        );
      }
    }
  }
  
  // Speaking state
  &.speaking {
    .circle-core {
      background: radial-gradient(
        circle at center,
        rgba(var(--neon-primary), 0.6) 0%,
        rgba(var(--neon-primary), 0.4) 40%,
        rgba(var(--neon-primary), 0.15) 70%,
        transparent 100%
      );
      box-shadow: 
        0 0 60px rgba(var(--neon-primary), 1),
        0 0 120px rgba(var(--neon-primary), 0.8),
        inset 0 0 60px rgba(var(--neon-primary), 0.5);
      animation: holoFlicker 1s ease-in-out infinite;
    }
  }
  
  // High volume enhancement
  &.high-volume {
    .volume-ring {
      border-width: 3px;
      opacity: 1;
      border-color: rgba(var(--neon-secondary), 0.8);
      box-shadow: 0 0 20px rgba(var(--neon-secondary), 0.6);
    }
    
    .circle-core {
      transform: scale(1.05);
    }
  }
}

// Animations
@keyframes volumePulse {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: scale(1.2);
  }
}

@keyframes speakPulse {
  0% {
    opacity: 0;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
    transform: scale(1.4);
  }
}

// Responsive
@include respond(tablet) {
  .circle-container {
    width: clamp(220px, 45vw, 450px);
    height: clamp(220px, 45vw, 450px);
  }
  
  .animated-circle {
    width: clamp(180px, 40vw, 380px);
    height: clamp(180px, 40vw, 380px);
  }
}

@include respond(mobile) {
  .circle-container {
    width: clamp(180px, 60vw, 350px);
    height: clamp(180px, 60vw, 350px);
  }
  
  .animated-circle {
    width: clamp(150px, 50vw, 300px);
    height: clamp(150px, 50vw, 300px);
  }
}