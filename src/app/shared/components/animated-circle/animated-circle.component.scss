@use '../../../../styles/mixins.scss' as *;
@use '../../../../styles/variables.scss' as *;

.circle-container {
  @include flex-center;
  position: relative;
  width: clamp(200px, 30vw, 400px);
  height: clamp(200px, 30vw, 400px);
  @include circuit-pattern(var(--neon-tertiary), 0.05); // Agrego patrón de circuito para vibe futurista
}

.particles {
  @include particle-field(20); // Usando mixin para campo de partículas
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  
  .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: var(--particle-color);
    border-radius: var(--radius-full);
    opacity: 0.2;
    animation: particleMove duration('slow') linear infinite;
    
    @include generate-particles(20); // Generación random con math
  }
}

.animated-circle {
  @include flex-center;
  position: relative;
  width: clamp(180px, 25vw, 350px);
  height: clamp(180px, 25vw, 350px);
  border-radius: var(--radius-full);
  transition: all var(--transition-normal);
  
  // Base glow effect
  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: var(--radius-full);
    background: radial-gradient(
      circle,
      rgba(var(--neon-primary), 0.1) 0%,
      rgba(var(--neon-primary), 0.05) 50%,
      transparent 100%
    );
    transform: scale(1.2);
    transition: all var(--transition-normal);
  }
  
  // Core circle con glass holográfico
  .circle-core {
    @include holographic-glass('strong');
    width: 60%;
    height: 60%;
    border-radius: var(--radius-full);
    border: 1px solid var(--neon-primary);
    position: relative;
    transition: all var(--transition-normal);
    
    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: var(--radius-full);
      background: radial-gradient(
        circle at 30% 30%,
        rgba(var(--neon-primary), 0.2) 0%,
        transparent 70%
      );
      animation: pulseGlow duration('slow') ease-in-out infinite alternate;
    }
  }
  
  // Volume rings para listening con neon-border
  .volume-ring {
    @include neon-border(var(--neon-secondary), 2px, 'normal');
    position: absolute;
    border-radius: var(--radius-full);
    opacity: 0;
    animation: matrixRain duration('fast') ease-out infinite;
    
    &.ring-1 {
      width: 70%;
      height: 70%;
      animation-delay: 0s;
    }
    
    &.ring-2 {
      width: 85%;
      height: 85%;
      animation-delay: 0.3s;
    }
    
    &.ring-3 {
      width: 100%;
      height: 100%;
      animation-delay: 0.6s;
    }
  }
  
  // Speaking glow con neon-box
  .speaking-glow {
    @include neon-box(var(--neon-primary), 'strong');
    position: absolute;
    width: 120%;
    height: 120%;
    border-radius: var(--radius-full);
    background: radial-gradient(
      circle,
      rgba(var(--neon-primary), 0.3) 0%,
      rgba(var(--neon-secondary), 0.2) 50%,
      transparent 100%
    );
    animation: rotateHue duration('normal') ease-in-out infinite;
    opacity: 0.8;
  }
  
  // Center icon con neon-glow
  .center-icon {
    @include flex-center;
    position: absolute;
    width: 40%;
    height: 40%;
    z-index: z('content');
    
    .jarvis-logo {
      width: 100%;
      height: 100%;
      color: var(--neon-primary);
      @include neon-glow(var(--neon-primary), 'normal');
      animation: dataStream duration('slow') ease-in-out infinite;
    }
  }
  
  // Listening state mejorado
  &.listening {
    @include scan-lines(var(--neon-secondary)); // Agrego scan lines para efecto insano
    .circle-core {
      border-color: var(--neon-secondary);
      background: rgba(var(--neon-secondary), 0.1);
      @include neon-box(var(--neon-secondary), 'strong');
      animation: pulseGlow duration('slow') ease-in-out infinite;
    }
    
    .jarvis-logo {
      color: var(--neon-secondary);
      animation: rotateHue duration('normal') linear infinite, dataStream duration('slow') ease-in-out infinite;
    }
    
    &::before {
      background: radial-gradient(
        circle,
        rgba(var(--neon-secondary), 0.15) 0%,
        rgba(var(--neon-secondary), 0.08) 50%,
        transparent 100%
      );
      transform: scale(1.3);
    }
  }
  
  // Speaking state mejorado
  &.speaking {
    @include scan-lines(var(--neon-primary)); // Scan lines para futurista
    .circle-core {
      border-color: var(--neon-primary);
      background: rgba(var(--neon-primary), 0.15);
      @include neon-box(var(--neon-primary), 'extreme');
      animation: holoFlicker duration('normal') ease-in-out infinite;
    }
    
    .jarvis-logo {
      color: var(--neon-primary);
      animation: pulseGlow duration('normal') ease-in-out infinite, dataStream duration('slow') ease-in-out infinite;
    }
    
    &::before {
      background: radial-gradient(
        circle,
        rgba(var(--neon-primary), 0.2) 0%,
        rgba(var(--neon-primary), 0.1) 50%,
        transparent 100%
      );
      transform: scale(1.4);
      animation: rotateHue duration('normal') ease-in-out infinite;
    }
  }
  
  // High volume enhancement
  &.high-volume {
    .volume-ring {
      border-width: 3px;
      opacity: 0.8;
      animation-duration: duration('fast');
    }
    
    .circle-core {
      transform: scale(1.05);
    }
  }
}

// Responsive adjustments
@include respond(mobile) {
  .circle-container {
    width: clamp(160px, 40vw, 280px);
    height: clamp(160px, 40vw, 280px);
  }
  
  .animated-circle {
    width: clamp(140px, 35vw, 250px);
    height: clamp(140px, 35vw, 250px);
  }
}